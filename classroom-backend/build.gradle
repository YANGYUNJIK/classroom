plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.jsoup:jsoup:1.15.4'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
}

tasks.named('test') {
	useJUnitPlatform()
}

// plain.jar은 생성하지 않도록
tasks.named('jar') {
	enabled = false
}

// 실행 가능한 bootJar 생성 (기본값은 build/libs/*.jar 이지만 명시적으로 지정 가능)
tasks.named('bootJar') {
	enabled = true
	archiveFileName = 'app.jar' // 원하는 경우 변경 가능 (Railway는 알아서 실행)
}
